<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0618.0924                               -->
<workbook original-version='18.1' source-build='2024.1.4 (20241.24.0618.0924)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Filter Selection' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Genres&quot;'>
        <calculation class='tableau' formula='&quot;Genres&quot;' />
        <members>
          <member value='&quot;Genres&quot;' />
          <member value='&quot;Year&quot;' />
          <member value='&quot;Studio&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='cleaned_final_merged_df' inline='true' name='federated.1x8ye8m1mhyc2j15spx4c1nw9pon' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_final_merged_df' name='textscan.1wjnyfh08qxfm018tcz8m0k3ik8l'>
            <connection class='textscan' directory='C:/Users/User/Documents/Moringa_labs/PHASE 2/PHASE 2 PROJECT/phase-2-project' filename='cleaned_final_merged_df' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1wjnyfh08qxfm018tcz8m0k3ik8l' name='cleaned_final_merged_df' table='[cleaned_final_merged_df]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='movie_id' ordinal='0' />
            <column datatype='real' name='averagerating' ordinal='1' />
            <column datatype='integer' name='numvotes' ordinal='2' />
            <column datatype='integer' name='start_year' ordinal='3' />
            <column datatype='real' name='runtime_minutes' ordinal='4' />
            <column datatype='string' name='genres' ordinal='5' />
            <column datatype='string' name='title' ordinal='6' />
            <column datatype='string' name='studio' ordinal='7' />
            <column datatype='real' name='domestic_gross' ordinal='8' />
            <column datatype='real' name='foreign_gross' ordinal='9' />
            <column datatype='integer' name='year' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1wjnyfh08qxfm018tcz8m0k3ik8l' name='cleaned_final_merged_df' table='[cleaned_final_merged_df]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='movie_id' ordinal='0' />
            <column datatype='real' name='averagerating' ordinal='1' />
            <column datatype='integer' name='numvotes' ordinal='2' />
            <column datatype='integer' name='start_year' ordinal='3' />
            <column datatype='real' name='runtime_minutes' ordinal='4' />
            <column datatype='string' name='genres' ordinal='5' />
            <column datatype='string' name='title' ordinal='6' />
            <column datatype='string' name='studio' ordinal='7' />
            <column datatype='real' name='domestic_gross' ordinal='8' />
            <column datatype='real' name='foreign_gross' ordinal='9' />
            <column datatype='integer' name='year' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_final_merged_df]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>movie_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[movie_id]</local-name>
            <parent-name>[cleaned_final_merged_df]</parent-name>
            <remote-alias>movie_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>averagerating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[averagerating]</local-name>
            <parent-name>[cleaned_final_merged_df]</parent-name>
            <remote-alias>averagerating</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>numvotes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[numvotes]</local-name>
            <parent-name>[cleaned_final_merged_df]</parent-name>
            <remote-alias>numvotes</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start_year]</local-name>
            <parent-name>[cleaned_final_merged_df]</parent-name>
            <remote-alias>start_year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>runtime_minutes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[runtime_minutes]</local-name>
            <parent-name>[cleaned_final_merged_df]</parent-name>
            <remote-alias>runtime_minutes</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>genres</remote-name>
            <remote-type>129</remote-type>
            <local-name>[genres]</local-name>
            <parent-name>[cleaned_final_merged_df]</parent-name>
            <remote-alias>genres</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[cleaned_final_merged_df]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>studio</remote-name>
            <remote-type>129</remote-type>
            <local-name>[studio]</local-name>
            <parent-name>[cleaned_final_merged_df]</parent-name>
            <remote-alias>studio</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>domestic_gross</remote-name>
            <remote-type>5</remote-type>
            <local-name>[domestic_gross]</local-name>
            <parent-name>[cleaned_final_merged_df]</parent-name>
            <remote-alias>domestic_gross</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>foreign_gross</remote-name>
            <remote-type>5</remote-type>
            <local-name>[foreign_gross]</local-name>
            <parent-name>[cleaned_final_merged_df]</parent-name>
            <remote-alias>foreign_gross</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[cleaned_final_merged_df]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total gross' datatype='real' name='[Calculation_518758425906782208]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[domestic_gross]+[foreign_gross]' />
      </column>
      <column caption='Smart Filter' datatype='string' name='[Calculation_518758425933746178]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Genres&quot; THEN &#13;&#10;    [genres] &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Year&quot; THEN &#13;&#10;    STR([year]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Studio&quot; THEN &#13;&#10;    [studio] &#13;&#10;ELSE &#13;&#10;    NULL &#13;&#10;END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_final_merged_df' datatype='table' name='[__tableau_internal_object_id__].[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]' role='measure' type='quantitative' />
      <column caption='Averagerating' datatype='real' name='[averagerating]' role='measure' type='quantitative' />
      <column caption='Domestic Gross' datatype='real' name='[domestic_gross]' role='measure' type='quantitative' />
      <column caption='Foreign Gross' datatype='real' name='[foreign_gross]' role='measure' type='quantitative' />
      <column caption='Genres' datatype='string' name='[genres]' role='dimension' type='nominal' />
      <column caption='Movie Id' datatype='string' name='[movie_id]' role='dimension' type='nominal' />
      <column caption='Numvotes' datatype='integer' name='[numvotes]' role='measure' type='quantitative' />
      <column caption='Runtime Minutes' datatype='real' name='[runtime_minutes]' role='measure' type='quantitative' />
      <column caption='Start Year' datatype='integer' name='[start_year]' role='dimension' type='quantitative' />
      <column caption='Studio' datatype='string' name='[studio]' role='dimension' type='nominal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[genres]' derivation='None' name='[none:genres:nk]' pivot='key' type='nominal' />
      <column-instance column='[studio]' derivation='None' name='[none:studio:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Studio,Year)' hidden='true' name='[Action (Studio,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[studio]' />
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/User/AppData/Local/Temp/TableauTemp/#TableauTemp_1002ltc1yscdxk12hepup158s3l1.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/26/2024 06:43:41 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>movie_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[movie_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>movie_id</remote-alias>
              <ordinal>0</ordinal>
              <family>cleaned_final_merged_df</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2944</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>averagerating</remote-name>
              <remote-type>5</remote-type>
              <local-name>[averagerating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>averagerating</remote-alias>
              <ordinal>1</ordinal>
              <family>cleaned_final_merged_df</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>68</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>numvotes</remote-name>
              <remote-type>20</remote-type>
              <local-name>[numvotes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>numvotes</remote-alias>
              <ordinal>2</ordinal>
              <family>cleaned_final_merged_df</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1885</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start_year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[start_year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start_year</remote-alias>
              <ordinal>3</ordinal>
              <family>cleaned_final_merged_df</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>runtime_minutes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[runtime_minutes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>runtime_minutes</remote-alias>
              <ordinal>4</ordinal>
              <family>cleaned_final_merged_df</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>125</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>genres</remote-name>
              <remote-type>129</remote-type>
              <local-name>[genres]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>genres</remote-alias>
              <ordinal>5</ordinal>
              <family>cleaned_final_merged_df</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>290</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>title</remote-alias>
              <ordinal>6</ordinal>
              <family>cleaned_final_merged_df</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1834</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>studio</remote-name>
              <remote-type>129</remote-type>
              <local-name>[studio]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>studio</remote-alias>
              <ordinal>7</ordinal>
              <family>cleaned_final_merged_df</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>194</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>domestic_gross</remote-name>
              <remote-type>5</remote-type>
              <local-name>[domestic_gross]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>domestic_gross</remote-alias>
              <ordinal>8</ordinal>
              <family>cleaned_final_merged_df</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1179</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>foreign_gross</remote-name>
              <remote-type>5</remote-type>
              <local-name>[foreign_gross]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>foreign_gross</remote-alias>
              <ordinal>9</ordinal>
              <family>cleaned_final_merged_df</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>755</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>10</ordinal>
              <family>cleaned_final_merged_df</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:studio:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BV&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Par.&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;P/DW&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;WB (NL)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uni.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wein.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LGF&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Sony&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fox&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;WB&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:genres:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Action,Adventure,Crime&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Action,Comedy,Horror&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Action,Drama,Horror&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Action,Horror,Thriller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Adventure,Comedy,Family&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Adventure,Drama,Thriller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Animation,Crime,Drama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Biography,Documentary,Music&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Comedy,Crime,Horror&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Comedy,Family,Romance&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Comedy,Sport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Crime,Thriller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Documentary,War&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Drama,Horror,Thriller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Drama,War&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Horror,Sci-Fi,Thriller&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Action,Adventure,Sci-Fi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Action,Biography,Crime&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Action,Crime,Mystery&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Action,Fantasy,Romance&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Adventure,Animation,Drama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Adventure,Drama,Family&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Animation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Biography,Comedy,Documentary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Biography,Drama,Thriller&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Comedy,Drama,Musical&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Comedy,Musical,Romance&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Crime,Drama,Romance&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Documentary,History,News&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Drama,History&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Drama,Romance,Thriller&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fantasy,Thriller&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thriller&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Action,Comedy,Crime&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Action,Drama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Action,History,Thriller&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adventure,Biography,Drama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adventure,Drama,Mystery&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Animation,Comedy,Drama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Biography,Documentary&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comedy,Crime&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comedy,Drama,Romance&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comedy,Drama,Thriller&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comedy,Mystery,Thriller&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Crime,Horror,Thriller&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Documentary,Musical&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Drama,History,War&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Drama,Sport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Horror,Mystery,Sci-Fi&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Comedy,Drama&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Action,Adventure,Fantasy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Action,Adventure,Thriller&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Action,Comedy,Sci-Fi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Action,Drama,Sci-Fi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Action,Romance,Thriller&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Adventure,Comedy,Music&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Adventure,Family,Sci-Fi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Animation,Drama,History&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Biography,Drama&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Comedy,Fantasy,Romance&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Crime,Documentary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Documentary,Drama,History&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Drama,Family,Sport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Drama,Musical,Romance&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Family,Sport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mystery,Romance,Thriller&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Action,Adventure,Drama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Action,Comedy,Musical&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Action,Drama,Music&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Action,Mystery,Sci-Fi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Adventure,Comedy,Fantasy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Adventure,Drama,Western&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Animation,Drama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Biography,Documentary,Mystery&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Comedy,Crime,Mystery&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Comedy,Family,Sci-Fi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Comedy,Thriller&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Documentary,Drama,Romance&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Drama,Fantasy,Romance&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Drama,Music&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Drama,War,Western&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Horror,Thriller&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Action,Adventure,Animation&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Action,Comedy,Drama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Action,Drama,Family&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Action,Horror&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adventure,Comedy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adventure,Drama,Romance&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Animation,Comedy,Family&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Biography,Documentary,Drama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comedy,Crime,Documentary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comedy,Drama,War&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crime,Drama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crime,Mystery&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Documentary,Mystery&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Drama,Horror&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Drama,Sport,Thriller&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Horror,Mystery,Thriller&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Drama,Romance&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Action,Animation,Sci-Fi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Action,Crime,Drama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Action,Fantasy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Adventure&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Adventure,Documentary,Sport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Adventure,Thriller&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Biography,Comedy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Biography,Drama,Romance&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Comedy,Drama,Horror&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Comedy,Music,Romance&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crime,Drama,Horror&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Documentary,Family&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Drama,Fantasy,Sci-Fi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fantasy,Romance&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sci-Fi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Action&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Action,Biography,Drama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Action,Crime,Sci-Fi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Action,Fantasy,Thriller&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Adventure,Animation,Family&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Adventure,Drama,Fantasy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Animation,Biography,Crime&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Biography,Comedy,Drama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Biography,Drama,War&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comedy,Drama,Mystery&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comedy,Mystery&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crime,Drama,Thriller&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Documentary,History,Thriller&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Drama,History,Romance&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Drama,Romance,War&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Horror&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thriller,Western&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Action,Animation,Crime&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Action,Comedy,Western&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Action,Drama,Western&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Action,Sport,War&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Adventure,Crime,Drama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Adventure,Horror&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Animation,Fantasy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Biography,Drama,Music&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Comedy,Drama,Fantasy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Comedy,Horror,Thriller&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crime,Drama,Fantasy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Documentary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Drama,Fantasy,Mystery&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Drama,Mystery,Thriller&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fantasy,Horror,Thriller&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romance,Sci-Fi,Thriller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Action,Adventure,Biography&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Action,Comedy,Family&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Action,Drama,Fantasy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Action,Horror,Mystery&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adventure,Comedy,Crime&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adventure,Drama,Sci-Fi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Animation,Comedy,Fantasy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Biography,Documentary,Family&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comedy,Crime,Drama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comedy,Family&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comedy,Romance,Sport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crime,Mystery,Thriller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Documentary,News&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Drama,Horror,Mystery&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fantasy,Romance,Thriller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Horror,Romance&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Action,Adventure,Western&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Action,Comedy,Sport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Action,Drama,Sport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Action,Sci-Fi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Adventure,Comedy,Romance&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Adventure,Fantasy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Animation,Drama,Romance&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Biography,Drama,Family&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Comedy,Documentary,Drama&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Crime,Documentary,Drama&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Documentary,Drama,Music&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Drama,Fantasy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Drama,Mystery&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Drama,Thriller&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fantasy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mystery,Sci-Fi,Thriller&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Action,Adventure,Horror&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Action,Animation&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Action,Comedy,Thriller&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Action,Drama,Thriller&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Action,Sci-Fi,Thriller&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Adventure,Comedy,Sci-Fi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Adventure,Fantasy,Horror&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Animation,Drama,Sci-Fi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Biography,Drama,Fantasy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Comedy,History&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Crime,Documentary,History&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Documentary,Drama,Mystery&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Drama,Fantasy,Horror&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Drama,Mystery,Romance&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fantasy,Horror&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mystery,Thriller&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Action,Animation,Drama&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Action,Crime&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Action,Family,Fantasy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Action,Thriller&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Adventure,Documentary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Adventure,Mystery,Sci-Fi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Biography&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Biography,Drama,Musical&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Comedy,Drama,History&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Comedy,Music&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crime,Drama,History&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Documentary,Drama,Sport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Drama,Mystery,Western&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fantasy,Mystery,Romance&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romance,Thriller&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Action,Biography,Comedy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Action,Crime,Horror&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Action,Fantasy,Horror&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Adventure,Comedy,Horror&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Adventure,Drama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Adventure,Western&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Biography,Comedy,Crime&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Biography,Drama,Sport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Comedy,Drama,Music&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Comedy,Musical&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Crime,Drama,Mystery&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Documentary,History&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Drama,Fantasy,Thriller&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Drama,Romance,Sci-Fi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Action,Adventure,Mystery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Action,Drama,Mystery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Action,Mystery,Thriller&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Adventure,Comedy,History&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Adventure,Family&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Animation,Drama,Family&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Biography,Documentary,Sport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Comedy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Comedy,Crime,Romance&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Comedy,Fantasy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Comedy,Western&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Documentary,Drama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Drama,Family&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Drama,Music,Musical&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Drama,Western&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Music&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Comedy,Romance&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Action,Adventure,Comedy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Action,Comedy,Fantasy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Action,Drama,History&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Action,Horror,Sci-Fi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adventure,Comedy,Drama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adventure,Drama,Sport&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Animation,Comedy,Music&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Biography,Documentary,History&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Comedy,Crime,History&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Comedy,Family,Fantasy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Comedy,Sci-Fi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Crime,Romance,Thriller&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Documentary,Sport&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Drama,Horror,Sci-Fi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Drama,Thriller,War&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Horror,Romance,Thriller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Action,Biography,History&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Action,Crime,Thriller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Action,Fantasy,Western&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adventure,Animation,Comedy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adventure,Biography,Comedy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adventure,Drama,History&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Animation,Biography,Drama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Biography,Crime,Documentary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Biography,History,Thriller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Comedy,Horror&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Comedy,Mystery,Romance&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crime,Drama,War&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Documentary,History,War&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Drama,History,Sport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Drama,Sci-Fi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Horror,Music,Thriller&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Action,Animation,Comedy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Action,Comedy,War&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Action,Drama,War&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Action,Sport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Adventure,Comedy,Western&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Adventure,History&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Animation,Family&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Biography,Drama,History&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Comedy,Drama,Family&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Comedy,Horror,Romance&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Documentary,Drama,News&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Drama,Fantasy,Music&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Drama,Mystery,Sci-Fi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fantasy,Horror,Mystery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Romance&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Action,Adventure,Family&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Action,Comedy,Mystery&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Action,Comedy,Romance&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Action,Drama,Romance&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Action,Romance&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Adventure,Family,Fantasy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Animation,Drama,Fantasy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Biography,Documentary,Thriller&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Comedy,Crime,Thriller&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Comedy,Fantasy,Horror&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Crime&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Documentary,Drama,Family&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Drama,Family,Music&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Drama,Music,Romance&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Family&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mystery&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Drama&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Action,Adventure&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Action,Comedy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Action,Documentary,History&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Action,History&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adventure,Biography,Documentary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adventure,Drama,Horror&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Animation,Comedy,Crime&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Biography,Crime,Drama&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comedy,Documentary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comedy,Drama,Sport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comedy,Mystery,Sci-Fi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Crime,Horror,Mystery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Documentary,Music&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Drama,History,Thriller&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Drama,Sci-Fi,Thriller&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Horror,Mystery&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Kenya&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Filter Selection' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Genres&quot;'>
          <calculation class='tableau' formula='&quot;Genres&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_final_merged_df' id='cleaned_final_merged_df_63B959C6593049728EFAA8A1A0B1FF93'>
            <properties context=''>
              <relation connection='textscan.1wjnyfh08qxfm018tcz8m0k3ik8l' name='cleaned_final_merged_df' table='[cleaned_final_merged_df]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='movie_id' ordinal='0' />
                  <column datatype='real' name='averagerating' ordinal='1' />
                  <column datatype='integer' name='numvotes' ordinal='2' />
                  <column datatype='integer' name='start_year' ordinal='3' />
                  <column datatype='real' name='runtime_minutes' ordinal='4' />
                  <column datatype='string' name='genres' ordinal='5' />
                  <column datatype='string' name='title' ordinal='6' />
                  <column datatype='string' name='studio' ordinal='7' />
                  <column datatype='real' name='domestic_gross' ordinal='8' />
                  <column datatype='real' name='foreign_gross' ordinal='9' />
                  <column datatype='integer' name='year' ordinal='10' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.1x8ye8m1mhyc2j15spx4c1nw9pon'>
      <datasources>
        <datasource caption='cleaned_final_merged_df' name='federated.1x8ye8m1mhyc2j15spx4c1nw9pon' />
      </datasources>
      <datasource-dependencies datasource='federated.1x8ye8m1mhyc2j15spx4c1nw9pon'>
        <column caption='Smart Filter' datatype='string' name='[Calculation_518758425933746178]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Genres&quot; THEN &#13;&#10;    [genres] &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Year&quot; THEN &#13;&#10;    STR([year]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Studio&quot; THEN &#13;&#10;    [studio] &#13;&#10;ELSE &#13;&#10;    NULL &#13;&#10;END' />
        </column>
        <column-instance column='[Calculation_518758425933746178]' derivation='None' name='[none:Calculation_518758425933746178:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:Calculation_518758425933746178:nk]'>
        <groupfilter function='level-members' level='[none:Calculation_518758425933746178:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_556A5312435C4452BFDAE54FCFE53A6B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Top 10 Genres By Highest Profit' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_12CC36143C8D4447BD768F0346E005B9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Top 5 Successful Film studios per year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_31FBCCCDCE9C4C4188E1EBD6A7737192]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Genre Profits versus Runtime' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_EC0022B7A87D4BA9A2BDA5B41349A403]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Genre rating over  time' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_C37C29B549424E4580EAB67634B52199]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Total Gross' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_4222AEF5F2BA48D5844607ED57D86355]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Foreign Gross' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_5DD1A50004F049A58A8694F1551EF487]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Domestic Gross' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Domestic Gross'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_final_merged_df' name='federated.1x8ye8m1mhyc2j15spx4c1nw9pon' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Filter Selection' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Genres&quot;'>
              <calculation class='tableau' formula='&quot;Genres&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1x8ye8m1mhyc2j15spx4c1nw9pon'>
            <column caption='Smart Filter' datatype='string' name='[Calculation_518758425933746178]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Genres&quot; THEN &#13;&#10;    [genres] &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Year&quot; THEN &#13;&#10;    STR([year]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Studio&quot; THEN &#13;&#10;    [studio] &#13;&#10;ELSE &#13;&#10;    NULL &#13;&#10;END' />
            </column>
            <column caption='Domestic Gross' datatype='real' name='[domestic_gross]' role='measure' type='quantitative' />
            <column caption='Genres' datatype='string' name='[genres]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_518758425933746178]' derivation='None' name='[none:Calculation_518758425933746178:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Studio' datatype='string' name='[studio]' role='dimension' type='nominal' />
            <column-instance column='[domestic_gross]' derivation='Sum' name='[sum:domestic_gross:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[Action (Studio,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_12CC36143C8D4447BD768F0346E005B9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[studio]' />
              <groupfilter function='level-members' level='[none:year:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:Calculation_518758425933746178:nk]</column>
            <column>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[Action (Studio,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' value='5' />
            <format attr='border-style' value='dotted' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' data-class='subtotal' value='#000000' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='14' />
            <format attr='font-family' value='Tableau Semibold' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
            <format attr='background-color' value='#dfedeb' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:domestic_gross:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{53207F83-620F-458B-82A1-15479C6B9318}' />
    </worksheet>
    <worksheet name='Foreign Gross'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_final_merged_df' name='federated.1x8ye8m1mhyc2j15spx4c1nw9pon' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Filter Selection' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Genres&quot;'>
              <calculation class='tableau' formula='&quot;Genres&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1x8ye8m1mhyc2j15spx4c1nw9pon'>
            <column caption='Smart Filter' datatype='string' name='[Calculation_518758425933746178]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Genres&quot; THEN &#13;&#10;    [genres] &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Year&quot; THEN &#13;&#10;    STR([year]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Studio&quot; THEN &#13;&#10;    [studio] &#13;&#10;ELSE &#13;&#10;    NULL &#13;&#10;END' />
            </column>
            <column caption='Foreign Gross' datatype='real' name='[foreign_gross]' role='measure' type='quantitative' />
            <column caption='Genres' datatype='string' name='[genres]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_518758425933746178]' derivation='None' name='[none:Calculation_518758425933746178:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Studio' datatype='string' name='[studio]' role='dimension' type='nominal' />
            <column-instance column='[foreign_gross]' derivation='Sum' name='[sum:foreign_gross:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[Action (Studio,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_12CC36143C8D4447BD768F0346E005B9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[studio]' />
              <groupfilter function='level-members' level='[none:year:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:Calculation_518758425933746178:nk]</column>
            <column>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[Action (Studio,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='dotted' />
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='5' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='14' />
            <format attr='font-family' value='Tableau Semibold' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
            <format attr='background-color' value='#dfedeb' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:foreign_gross:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8F969DE1-0DEF-40BB-8CA3-E520E5575EE9}' />
    </worksheet>
    <worksheet name='Genre Profits versus Runtime'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_final_merged_df' name='federated.1x8ye8m1mhyc2j15spx4c1nw9pon' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Filter Selection' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Genres&quot;'>
              <calculation class='tableau' formula='&quot;Genres&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1x8ye8m1mhyc2j15spx4c1nw9pon'>
            <column caption='Total gross' datatype='real' name='[Calculation_518758425906782208]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[domestic_gross]+[foreign_gross]' />
            </column>
            <column caption='Smart Filter' datatype='string' name='[Calculation_518758425933746178]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Genres&quot; THEN &#13;&#10;    [genres] &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Year&quot; THEN &#13;&#10;    STR([year]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Studio&quot; THEN &#13;&#10;    [studio] &#13;&#10;ELSE &#13;&#10;    NULL &#13;&#10;END' />
            </column>
            <column caption='Averagerating' datatype='real' name='[averagerating]' role='measure' type='quantitative' />
            <column caption='Domestic Gross' datatype='real' name='[domestic_gross]' role='measure' type='quantitative' />
            <column caption='Foreign Gross' datatype='real' name='[foreign_gross]' role='measure' type='quantitative' />
            <column caption='Genres' datatype='string' name='[genres]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_518758425933746178]' derivation='None' name='[none:Calculation_518758425933746178:nk]' pivot='key' type='nominal' />
            <column-instance column='[genres]' derivation='None' name='[none:genres:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Runtime Minutes' datatype='real' name='[runtime_minutes]' role='measure' type='quantitative' />
            <column caption='Studio' datatype='string' name='[studio]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_518758425906782208]' derivation='Sum' name='[sum:Calculation_518758425906782208:qk]' pivot='key' type='quantitative' />
            <column-instance column='[runtime_minutes]' derivation='Sum' name='[sum:runtime_minutes:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[Action (Studio,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_12CC36143C8D4447BD768F0346E005B9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[studio]' />
              <groupfilter function='level-members' level='[none:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([averagerating])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:genres:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:runtime_minutes:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]</column>
            <column>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:Calculation_518758425933746178:nk]</column>
            <column>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[Action (Studio,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:Calculation_518758425906782208:qk]' value='c&quot;$&quot;#,##0,,,.00B;(&quot;$&quot;#,##0,,,.00B)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]' value='-90' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#dfedeb' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:runtime_minutes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]' />
              <text column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:runtime_minutes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:Calculation_518758425906782208:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]' />
              <text column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:Calculation_518758425906782208:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:runtime_minutes:qk] + [federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:Calculation_518758425906782208:qk])</rows>
        <cols>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]</cols>
      </table>
      <simple-id uuid='{3CAA15E7-FEC2-4C10-86B3-83BEF0FC578B}' />
    </worksheet>
    <worksheet name='Genre rating over  time'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_final_merged_df' name='federated.1x8ye8m1mhyc2j15spx4c1nw9pon' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Filter Selection' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Genres&quot;'>
              <calculation class='tableau' formula='&quot;Genres&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1x8ye8m1mhyc2j15spx4c1nw9pon'>
            <column caption='Smart Filter' datatype='string' name='[Calculation_518758425933746178]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Genres&quot; THEN &#13;&#10;    [genres] &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Year&quot; THEN &#13;&#10;    STR([year]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Studio&quot; THEN &#13;&#10;    [studio] &#13;&#10;ELSE &#13;&#10;    NULL &#13;&#10;END' />
            </column>
            <column caption='Averagerating' datatype='real' name='[averagerating]' role='measure' type='quantitative' />
            <column caption='Genres' datatype='string' name='[genres]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_518758425933746178]' derivation='None' name='[none:Calculation_518758425933746178:nk]' pivot='key' type='nominal' />
            <column-instance column='[genres]' derivation='None' name='[none:genres:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Studio' datatype='string' name='[studio]' role='dimension' type='nominal' />
            <column-instance column='[averagerating]' derivation='Sum' name='[sum:averagerating:qk]' pivot='key' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[Action (Studio,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_12CC36143C8D4447BD768F0346E005B9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[studio]' />
              <groupfilter function='level-members' level='[none:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([averagerating])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:genres:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:year:qk]' included-values='all' />
          <slices>
            <column>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]</column>
            <column>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:year:qk]</column>
            <column>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:Calculation_518758425933746178:nk]</column>
            <column>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[Action (Studio,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]' value='61' />
            <format attr='width' field='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:averagerating:qk]' value='40' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-orientation' value='0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]' value='-90' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='div-level' scope='rows' value='1' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#dfedeb' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]' />
              <lod column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:title:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:averagerating:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:averagerating:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:averagerating:qk]</rows>
        <cols>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]</cols>
      </table>
      <simple-id uuid='{8744CDFF-669A-473C-B274-001365E48EDD}' />
    </worksheet>
    <worksheet name='Top 10 Genres By Highest Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_final_merged_df' name='federated.1x8ye8m1mhyc2j15spx4c1nw9pon' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Filter Selection' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Genres&quot;'>
              <calculation class='tableau' formula='&quot;Genres&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1x8ye8m1mhyc2j15spx4c1nw9pon'>
            <column caption='Total gross' datatype='real' name='[Calculation_518758425906782208]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[domestic_gross]+[foreign_gross]' />
            </column>
            <column caption='Smart Filter' datatype='string' name='[Calculation_518758425933746178]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Genres&quot; THEN &#13;&#10;    [genres] &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Year&quot; THEN &#13;&#10;    STR([year]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Studio&quot; THEN &#13;&#10;    [studio] &#13;&#10;ELSE &#13;&#10;    NULL &#13;&#10;END' />
            </column>
            <column caption='Averagerating' datatype='real' name='[averagerating]' role='measure' type='quantitative' />
            <column caption='Domestic Gross' datatype='real' name='[domestic_gross]' role='measure' type='quantitative' />
            <column caption='Foreign Gross' datatype='real' name='[foreign_gross]' role='measure' type='quantitative' />
            <column caption='Genres' datatype='string' name='[genres]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_518758425933746178]' derivation='None' name='[none:Calculation_518758425933746178:nk]' pivot='key' type='nominal' />
            <column-instance column='[genres]' derivation='None' name='[none:genres:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Studio' datatype='string' name='[studio]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_518758425906782208]' derivation='Sum' name='[sum:Calculation_518758425906782208:qk]' pivot='key' type='quantitative' />
            <column-instance column='[domestic_gross]' derivation='Sum' name='[sum:domestic_gross:qk]' pivot='key' type='quantitative' />
            <column-instance column='[foreign_gross]' derivation='Sum' name='[sum:foreign_gross:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[Action (Studio,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_12CC36143C8D4447BD768F0346E005B9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[studio]' />
              <groupfilter function='level-members' level='[none:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([averagerating])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:genres:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:domestic_gross:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]</column>
            <column>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:Calculation_518758425933746178:nk]</column>
            <column>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[Action (Studio,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]' value='59' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:domestic_gross:qk]' value='c&quot;$&quot;#,##0,,M;(&quot;$&quot;#,##0,,M)' />
            <format attr='text-format' field='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:foreign_gross:qk]' value='c&quot;$&quot;#,##0,,M;(&quot;$&quot;#,##0,,M)' />
            <format attr='text-format' field='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:Calculation_518758425906782208:qk]' value='c&quot;$&quot;#,##0,,M;(&quot;$&quot;#,##0,,M)' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-family' value='Tableau Bold' />
            <format attr='background-color' value='#dfedeb' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:domestic_gross:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]' />
              <text column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:domestic_gross:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:foreign_gross:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]' />
              <text column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:foreign_gross:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:Calculation_518758425906782208:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]' />
              <text column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:Calculation_518758425906782208:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:domestic_gross:qk] + ([federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:foreign_gross:qk] + [federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:Calculation_518758425906782208:qk]))</rows>
        <cols>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]</cols>
      </table>
      <simple-id uuid='{340FFFBA-AE0A-4A72-A8EA-80D5537382E2}' />
    </worksheet>
    <worksheet name='Top 5 Successful Film studios per year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_final_merged_df' name='federated.1x8ye8m1mhyc2j15spx4c1nw9pon' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Filter Selection' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Genres&quot;'>
              <calculation class='tableau' formula='&quot;Genres&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1x8ye8m1mhyc2j15spx4c1nw9pon'>
            <column caption='Total gross' datatype='real' name='[Calculation_518758425906782208]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[domestic_gross]+[foreign_gross]' />
            </column>
            <column caption='Smart Filter' datatype='string' name='[Calculation_518758425933746178]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Genres&quot; THEN &#13;&#10;    [genres] &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Year&quot; THEN &#13;&#10;    STR([year]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Studio&quot; THEN &#13;&#10;    [studio] &#13;&#10;ELSE &#13;&#10;    NULL &#13;&#10;END' />
            </column>
            <column caption='Domestic Gross' datatype='real' name='[domestic_gross]' role='measure' type='quantitative' />
            <column caption='Foreign Gross' datatype='real' name='[foreign_gross]' role='measure' type='quantitative' />
            <column caption='Genres' datatype='string' name='[genres]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_518758425933746178]' derivation='None' name='[none:Calculation_518758425933746178:nk]' pivot='key' type='nominal' />
            <column-instance column='[studio]' derivation='None' name='[none:studio:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Studio' datatype='string' name='[studio]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_518758425906782208]' derivation='Sum' name='[sum:Calculation_518758425906782208:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:studio:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_518758425906782208])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:studio:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:studio:nk]</column>
            <column>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:Calculation_518758425933746178:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:Calculation_518758425906782208:qk]' value='40' />
            <format attr='height' field='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:year:qk]' value='31' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:Calculation_518758425906782208:qk]' value='c&quot;$&quot;#,##0,,.0M;(&quot;$&quot;#,##0,,.0M)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:studio:nk]' value='36' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#dfedeb' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:studio:nk]' />
              <text column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:Calculation_518758425906782208:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:studio:nk] * [federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:Calculation_518758425906782208:qk])</rows>
        <cols>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{7AF0842D-B13C-4871-AAC8-18A23D071CA4}' />
    </worksheet>
    <worksheet name='Total Gross'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_final_merged_df' name='federated.1x8ye8m1mhyc2j15spx4c1nw9pon' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Filter Selection' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Genres&quot;'>
              <calculation class='tableau' formula='&quot;Genres&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1x8ye8m1mhyc2j15spx4c1nw9pon'>
            <column caption='Total gross' datatype='real' name='[Calculation_518758425906782208]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[domestic_gross]+[foreign_gross]' />
            </column>
            <column caption='Smart Filter' datatype='string' name='[Calculation_518758425933746178]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Genres&quot; THEN &#13;&#10;    [genres] &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Year&quot; THEN &#13;&#10;    STR([year]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Studio&quot; THEN &#13;&#10;    [studio] &#13;&#10;ELSE &#13;&#10;    NULL &#13;&#10;END' />
            </column>
            <column caption='Domestic Gross' datatype='real' name='[domestic_gross]' role='measure' type='quantitative' />
            <column caption='Foreign Gross' datatype='real' name='[foreign_gross]' role='measure' type='quantitative' />
            <column caption='Genres' datatype='string' name='[genres]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_518758425933746178]' derivation='None' name='[none:Calculation_518758425933746178:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Studio' datatype='string' name='[studio]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_518758425906782208]' derivation='Sum' name='[sum:Calculation_518758425906782208:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[Action (Studio,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_12CC36143C8D4447BD768F0346E005B9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[studio]' />
              <groupfilter function='level-members' level='[none:year:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:Calculation_518758425933746178:nk]</column>
            <column>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[Action (Studio,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='dotted' />
            <format attr='border-width' value='5' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Tableau Semibold' />
            <format attr='font-size' value='14' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
            <format attr='background-color' value='#dfedeb' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[sum:Calculation_518758425906782208:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5F26EB2D-986F-4420-8A2C-BFD566B3CCE1}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f3faf9' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='cleaned_final_merged_df' name='federated.1x8ye8m1mhyc2j15spx4c1nw9pon' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Filter Selection' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Genres&quot;'>
          <calculation class='tableau' formula='&quot;Genres&quot;' />
          <members>
            <member value='&quot;Genres&quot;' />
            <member value='&quot;Year&quot;' />
            <member value='&quot;Studio&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1x8ye8m1mhyc2j15spx4c1nw9pon'>
        <column caption='Smart Filter' datatype='string' name='[Calculation_518758425933746178]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Genres&quot; THEN &#13;&#10;    [genres] &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Year&quot; THEN &#13;&#10;    STR([year]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Studio&quot; THEN &#13;&#10;    [studio] &#13;&#10;ELSE &#13;&#10;    NULL &#13;&#10;END' />
        </column>
        <column-instance column='[Calculation_518758425933746178]' derivation='None' name='[none:Calculation_518758425933746178:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='18659' id='9' name='Domestic Gross' w='21126' x='346' y='9601' />
        <zone h='18841' id='10' name='Foreign Gross' w='20260' x='21732' y='9601' />
        <zone h='18841' id='11' name='Total Gross' w='21385' x='42165' y='9420' />
        <zone h='50362' id='16' name='Genre rating over  time' w='35844' x='63896' y='12319'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </zone-style>
        </zone>
        <zone h='36775' id='17' name='Genre Profits versus Runtime' w='35844' x='63896' y='62681'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </zone-style>
        </zone>
        <zone h='70652' id='18' name='Top 5 Successful Film studios per year' w='31948' x='87' y='28804'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </zone-style>
        </zone>
        <zone h='70652' id='19' name='Top 10 Genres By Highest Profit' w='31342' x='32208' y='28804'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </zone-style>
        </zone>
        <zone h='9964' id='20' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='14719' x='63896' y='1449'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </zone-style>
        </zone>
        <zone h='10870' id='21' mode='dropdown' name='Foreign Gross' param='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:Calculation_518758425933746178:nk]' type-v2='filter' values='database' w='20606' x='78788' y='543'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='6703' id='7' type-v2='text' w='62944' x='433' y='2355'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Rockwell Extra Bold' fontsize='14'>MOVIE PRODUCTION SUCCESS DASHBOARD</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='4' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97102' id='27' param='vert' type-v2='layout-flow' w='98614' x='693' y='1449'>
                <zone h='9964' id='20' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='14719' x='63896' y='1449'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='6703' id='7' type-v2='text' w='62944' x='433' y='2355'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000' fontname='Rockwell Extra Bold' fontsize='14'>MOVIE PRODUCTION SUCCESS DASHBOARD</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='4' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='151' h='18841' id='11' is-fixed='true' name='Total Gross' w='21385' x='42165' y='9420'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='149' h='18659' id='9' is-fixed='true' name='Domestic Gross' w='21126' x='346' y='9601'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10870' id='21' mode='dropdown' name='Foreign Gross' param='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:Calculation_518758425933746178:nk]' type-v2='filter' values='database' w='20606' x='78788' y='543'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='151' h='18841' id='10' is-fixed='true' name='Foreign Gross' w='20260' x='21732' y='9601'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50362' id='16' is-fixed='true' name='Genre rating over  time' w='35844' x='63896' y='12319'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='70652' id='18' is-fixed='true' name='Top 5 Successful Film studios per year' w='31948' x='87' y='28804'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='70652' id='19' is-fixed='true' name='Top 10 Genres By Highest Profit' w='31342' x='32208' y='28804'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36775' id='17' is-fixed='true' name='Genre Profits versus Runtime' w='35844' x='63896' y='62681'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{96AB8FFC-DE5D-4436-8C98-D994F5FBFCE3}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Domestic Gross'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{296D08AE-1D24-414F-8010-DFD0DF507DF4}' />
    </window>
    <window class='worksheet' name='Foreign Gross'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{3704B6D5-579F-4352-A23E-D845F066F2BC}' />
    </window>
    <window class='worksheet' name='Total Gross'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:Calculation_518758425933746178:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DEA4839E-C29E-4EB4-A916-B30A0A1CF17E}' />
    </window>
    <window class='worksheet' name='Top 10 Genres By Highest Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E56D85CA-7AAA-429A-B582-2C5B8571EFE5}' />
    </window>
    <window class='worksheet' name='Top 5 Successful Film studios per year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:studio:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:studio:nk]</field>
            <field>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{630EE47B-0328-42C8-A1A7-B2E6065AA3EE}' />
    </window>
    <window class='worksheet' name='Genre Profits versus Runtime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]</field>
            <field>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:movie_id:nk]</field>
            <field>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2A177193-F0DE-47D2-93D0-285A8BCC9BC2}' />
    </window>
    <window class='worksheet' name='Genre rating over  time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]</field>
            <field>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:title:nk]</field>
            <field>[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8B9B4444-C649-493E-95D5-594E5A09D097}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Domestic Gross'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Foreign Gross'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Genre Profits versus Runtime'>
          <zoom type='entire-view' />
          <highlight field='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Genre rating over  time'>
          <zoom type='entire-view' />
          <highlight field='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:genres:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Top 10 Genres By Highest Profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5 Successful Film studios per year'>
          <zoom type='entire-view' />
          <highlight field='[federated.1x8ye8m1mhyc2j15spx4c1nw9pon].[none:studio:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Total Gross'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='20' />
      <simple-id uuid='{C4406874-1A6D-45E3-B1CB-50882A9AF4CA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Domestic Gross' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACrUlEQVR4nO3YoW5UURhG0VOmgrqiIHgSeDEUmhcqAUzRoPAEQVICBN2kwTYpc8u0cxA8
      A71ir/UEn9n5T87BnHMOiDocY4w592Pe7tbeAnfuXwC3u7Fcnq+9Be7cvbUHwJoEQJoASBMA
      aQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAm
      ANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIg
      TQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIE
      QJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCk
      CYA0AZAmANIEQJoASBMAaQIg7XDtAXCX5pzj4uLXePX23djtblwAWrbb7Xj+4uW4uvo9NpuN
      C0DLsvwZy3I9nj19Mo6O7o+DOefc31yP5fJ87W3w3805x9nX7+Pk9enY7/cCoOfbj5/j8aOH
      49PnL55A9Lz/8HGcvDkdD46PXQDa/AKRJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgT
      AGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQ
      JgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkC
      IE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDS
      BECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQ9hdnJlqFlGHGxgAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Foreign Gross' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAC1ElEQVR4nO3XPY7NYRiH4YcIocMKREjEChQSW1EoFdQ0KolSoVALhViDKBSiEB+JBYzo
      fIzijDHHXyGZxALMKe7r6t6n+jV38R5almUZiDoyM7Msv2dZ/9r0FjhwfwNY/5qd7a1Nb4ED
      d3jTA2CTBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgT
      AGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQ
      JgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkC
      IE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDS
      BECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0AJCzLMl++fptHT57Nq9dv9m8CIGHr
      0+e5eu3G3L5zb969/zgzM9vbPwRAw+lTJ+fB/btz5fKl/dubtx/myAY3wYE5ceL4HDt29J/b
      t+8/BEDD3t56VqvVrNfr2d3dndVqZy5eOD+HlmVZfu/9nJ3trU1vhP/m+YuXc/3mrf33ubNn
      5unjhwKgzSeYNAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQ
      JgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkC
      IE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDS
      BECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0A
      pAmANAGQJgDSBECaAEgTAGkCIE0ApAmAtD+s6VnWSgerqwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 Genres By Highest Profit' width='192'>
      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
      fbPunOYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Gross' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADAUlEQVR4nO3YMavWBRiH4cfQKLc4RjgLujpIYGFEtDY5BUKLW4ib4LdQwykbWsNJIogD
      YUGSBi4KnchRUBxMz2BHzqv/Br/DeYf7uj7Bb7l54Nm3LMsyELV/ZmZZXs/yanfdW2DPvQng
      1e7sbD9c9xbYc2+tewCskwBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA
      0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBN
      AKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRA
      mgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJ
      gDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKTtX/cA2As7Oy9n85ff
      5vadu3P48Adz5svTc/Ddd1wAGv64c3d+uH5jjh09Mjd/vTVXrn43L1785wLQ8OGJ4/PxyRPz
      19aDuXd/azY23ptnz7cFQMOBtw/MpW++nZ83b87FC+fm01MfzWq1EgANv9/6c378aXO+v3Z5
      3j+0MavV7jx6/EQANGz9/c88/ffZfHH6q5mZ+fyzT+b812dn37Isy+vVy9nZfrjmibD3fIFI
      EwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQB
      kCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBp
      AiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA
      0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBN
      AKQJgDQBkCYA0gRAmgBI+x86MVafhf64FwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
